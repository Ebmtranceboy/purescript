// Generated by purs bundle 0.13.5
var PS = {};
(function(exports) {
  /* jshint maxparams: false */
  /* global exports, XMLHttpRequest */
  "use strict";

  // module Audio.WebAudio.AudioParam

  exports.setValue = function(value) {
    return function(param) {
      return function() {
        param.value = value;
      };
    };
  };


  exports.getValue = function(param) {
    return function() {
      return param.value;
    };
  };


  exports.setValueAtTime = function(value) {
    return function(startTime) {
      return function(param) {
        return function() {
          param.setValueAtTime(value, startTime);
        };
      };
    };
  };
})(PS["Audio.WebAudio.AudioParam"] = PS["Audio.WebAudio.AudioParam"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.AudioParam"] = $PS["Audio.WebAudio.AudioParam"] || {};
  var exports = $PS["Audio.WebAudio.AudioParam"];
  var $foreign = $PS["Audio.WebAudio.AudioParam"];
  exports["setValueAtTime"] = $foreign.setValueAtTime;
  exports["getValue"] = $foreign.getValue;
  exports["setValue"] = $foreign.setValue;
})(PS);
(function(exports) {
  /* jshint maxparams: false */
  /* global exports, XMLHttpRequest */
  "use strict";

  exports.currentTime = function(cx) {
    return function() {
      return cx.currentTime;
    };
  };

  exports._state = function(ctx) {
    return function() {
      return ctx.state;
    };
  };

  exports.suspend = function(ctx) {
    return function() {
      return ctx.suspend();
    };
  };

  exports.resume = function(ctx) {
    return function() {
      return ctx.resume();
    };
  };

  /* uncurrried version */
  function _decodeAudioData (cx, audioData, onError, onSuccess) {
     cx.decodeAudioData(audioData, function (buff) {
       // console.log('buffer decoded OK ');
       onSuccess(buff);
      },
      function (e) {
        // console.log('buffer decode failed ');
        onError(e.err);
     });
  };

  exports.createGain = function(ctx) {
    return function() {
      return ctx.createGain();
    };
  };

  exports.createOscillator = function(ctx) {
    return function() {
      return ctx.createOscillator();
    };
  };

  exports.newAudioContext = function() {
    return new (window.AudioContext || window.webkitAudioContext)();
  };
})(PS["Audio.WebAudio.BaseAudioContext"] = PS["Audio.WebAudio.BaseAudioContext"] || {});
(function(exports) {
  "use strict";


  exports.nodeConnect = function(_) {
    return function(_) {
      return function(source) {
        return function(sink) {
          return function() {
            source.connect(sink);
          };
        };
      };
    };
  };

  exports.nodeDisconnect = function(_) {
    return function(_) {
      return function(source) {
        return function(sink) {
          return function() {
            source.disconnect(sink);
          };
        };
      };
    };
  };

  exports.unsafeConnectParam = function(_) {
    return function(_) {
      return function(source) {
        return function(target) {
          return function(prop) {
            return function() {
              var value = target[prop];
              source.connect(value);
            };
          };
        };
      };
    };
  };
})(PS["Audio.WebAudio.Types"] = PS["Audio.WebAudio.Types"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  };
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.Types"] = $PS["Audio.WebAudio.Types"] || {};
  var exports = $PS["Audio.WebAudio.Types"];
  var $foreign = $PS["Audio.WebAudio.Types"];
  var Data_Eq = $PS["Data.Eq"];
  var SUSPENDED = (function () {
      function SUSPENDED() {

      };
      SUSPENDED.value = new SUSPENDED();
      return SUSPENDED;
  })();
  var RUNNING = (function () {
      function RUNNING() {

      };
      RUNNING.value = new RUNNING();
      return RUNNING;
  })();
  var CLOSED = (function () {
      function CLOSED() {

      };
      CLOSED.value = new CLOSED();
      return CLOSED;
  })();                 
  var Connectable = function (connect, connectParam, disconnect) {
      this.connect = connect;
      this.connectParam = connectParam;
      this.disconnect = disconnect;
  }; 
  var eqAudioContextState = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof SUSPENDED && y instanceof SUSPENDED) {
              return true;
          };
          if (x instanceof RUNNING && y instanceof RUNNING) {
              return true;
          };
          if (x instanceof CLOSED && y instanceof CLOSED) {
              return true;
          };
          return false;
      };
  });
  var connect = function (dict) {
      return dict.connect;
  };                                   
  var connectableGainNode = new Connectable(function (dictRawAudioNode) {
      return $foreign.nodeConnect()();
  }, function (dictRawAudioNode) {
      return $foreign.unsafeConnectParam()();
  }, function (dictRawAudioNode) {
      return $foreign.nodeDisconnect()();
  });                                         
  var connectableDestinationNode = new Connectable(function (dictRawAudioNode) {
      return $foreign.nodeConnect()();
  }, function (dictRawAudioNode) {
      return $foreign.unsafeConnectParam()();
  }, function (dictRawAudioNode) {
      return $foreign.nodeDisconnect()();
  });
  exports["SUSPENDED"] = SUSPENDED;
  exports["RUNNING"] = RUNNING;
  exports["CLOSED"] = CLOSED;
  exports["connect"] = connect;
  exports["eqAudioContextState"] = eqAudioContextState;
  exports["connectableGainNode"] = connectableGainNode;
  exports["connectableDestinationNode"] = connectableDestinationNode;
})(PS);
(function(exports) {
  /* jshint maxparams: false */
  /* global exports, XMLHttpRequest */
  "use strict";

  // module Audio.WebAudio.Utils


  exports.unsafeSetProp = function(prop) {
    return function(obj) {
      return function(value) {
        return function() {
          obj[prop] = value;
        };
      };
    };
  };


  exports.unsafeGetProp = function(prop) {
    return function(obj) {
      return function() {
        return obj[prop];
      };
    };
  };
})(PS["Audio.WebAudio.Utils"] = PS["Audio.WebAudio.Utils"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.Utils"] = $PS["Audio.WebAudio.Utils"] || {};
  var exports = $PS["Audio.WebAudio.Utils"];
  var $foreign = $PS["Audio.WebAudio.Utils"];
  exports["unsafeGetProp"] = $foreign.unsafeGetProp;
  exports["unsafeSetProp"] = $foreign.unsafeSetProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.BaseAudioContext"] = $PS["Audio.WebAudio.BaseAudioContext"] || {};
  var exports = $PS["Audio.WebAudio.BaseAudioContext"];
  var $foreign = $PS["Audio.WebAudio.BaseAudioContext"];
  var Audio_WebAudio_Types = $PS["Audio.WebAudio.Types"];
  var Audio_WebAudio_Utils = $PS["Audio.WebAudio.Utils"];          
  var state = function (ctx) {
      return function __do() {
          var v = $foreign["_state"](ctx)();
          if (v === "suspended") {
              return Audio_WebAudio_Types.SUSPENDED.value;
          };
          if (v === "running") {
              return Audio_WebAudio_Types.RUNNING.value;
          };
          if (v === "closed") {
              return Audio_WebAudio_Types.CLOSED.value;
          };
          return Audio_WebAudio_Types.CLOSED.value;
      };
  };                                                            
  var destination = Audio_WebAudio_Utils.unsafeGetProp("destination");
  exports["destination"] = destination;
  exports["state"] = state;
  exports["newAudioContext"] = $foreign.newAudioContext;
  exports["currentTime"] = $foreign.currentTime;
  exports["suspend"] = $foreign.suspend;
  exports["resume"] = $foreign.resume;
  exports["createGain"] = $foreign.createGain;
  exports["createOscillator"] = $foreign.createOscillator;
})(PS);
(function(exports) {
  /* jshint maxparams: false */
  /* global exports, XMLHttpRequest */
  "use strict";

  // module Audio.WebAudio.GainNode

  exports.gain = function(node) {
    return function() {
      return node.gain;
    };
  };
})(PS["Audio.WebAudio.GainNode"] = PS["Audio.WebAudio.GainNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.GainNode"] = $PS["Audio.WebAudio.GainNode"] || {};
  var exports = $PS["Audio.WebAudio.GainNode"];
  var $foreign = $PS["Audio.WebAudio.GainNode"];
  exports["gain"] = $foreign.gain;
})(PS);
(function(exports) {
  /* jshint maxparams: false */
  /* global exports, XMLHttpRequest */
  "use strict";

  // module Audio.WebAudio.Oscillator

  exports.startOscillator = function(when) {
    return function(n) {
      return function() {
        return n[n.start ? 'start' : 'noteOn'](when);
      };
    };
  };
})(PS["Audio.WebAudio.Oscillator"] = PS["Audio.WebAudio.Oscillator"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  }; 
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Audio.WebAudio.Oscillator"] = $PS["Audio.WebAudio.Oscillator"] || {};
  var exports = $PS["Audio.WebAudio.Oscillator"];
  var $foreign = $PS["Audio.WebAudio.Oscillator"];
  var Audio_WebAudio_Utils = $PS["Audio.WebAudio.Utils"];
  var Data_Show = $PS["Data.Show"];          
  var Sine = (function () {
      function Sine() {

      };
      Sine.value = new Sine();
      return Sine;
  })();
  var Square = (function () {
      function Square() {

      };
      Square.value = new Square();
      return Square;
  })();
  var Sawtooth = (function () {
      function Sawtooth() {

      };
      Sawtooth.value = new Sawtooth();
      return Sawtooth;
  })();
  var Triangle = (function () {
      function Triangle() {

      };
      Triangle.value = new Triangle();
      return Triangle;
  })();
  var Custom = (function () {
      function Custom() {

      };
      Custom.value = new Custom();
      return Custom;
  })();
  var oscillatorTypeShow = new Data_Show.Show(function (v) {
      if (v instanceof Sine) {
          return "sine";
      };
      if (v instanceof Square) {
          return "square";
      };
      if (v instanceof Sawtooth) {
          return "sawtooth";
      };
      if (v instanceof Triangle) {
          return "triangle";
      };
      if (v instanceof Custom) {
          return "custom";
      };
      throw new Error("Failed pattern match at Audio.WebAudio.Oscillator (line 18, column 1 - line 23, column 29): " + [ v.constructor.name ]);
  });
  var setOscillatorType = function (t) {
      return function (n) {
          return Audio_WebAudio_Utils.unsafeSetProp("type")(n)(Data_Show.show(oscillatorTypeShow)(t));
      };
  };
  var frequency = Audio_WebAudio_Utils.unsafeGetProp("frequency");
  exports["Square"] = Square;
  exports["frequency"] = frequency;
  exports["setOscillatorType"] = setOscillatorType;
  exports["startOscillator"] = $foreign.startOscillator;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                    
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  exports["flip"] = flip;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];               
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];                                   
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
})(PS);
(function(exports) {
  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.setInterval = function (ms) {
    return function (fn) {
      return function () {
        return setInterval(fn, ms);
      };
    };
  };

  exports.clearInterval = function (id) {
    return function () {
      clearInterval(id);
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  exports["setInterval"] = $foreign.setInterval;
  exports["clearInterval"] = $foreign.clearInterval;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                
  var QuerySelector = function (x) {
      return x;
  };
  var querySelector = function (qs) {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $4 = $foreign["_querySelector"](qs);
      return function ($5) {
          return $3($4($5));
      };
  };                                        
  var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
      return n;
  }, QuerySelector);
  exports["querySelector"] = querySelector;
  exports["newtypeQuerySelector"] = newtypeQuerySelector;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var Data_Newtype = $PS["Data.Newtype"];                                
  var EventType = function (x) {
      return x;
  };                                    
  var newtypeEventType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, EventType);
  exports["newtypeEventType"] = newtypeEventType;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                      
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toParentNode"] = toParentNode;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Audio_WebAudio_AudioParam = $PS["Audio.WebAudio.AudioParam"];
  var Audio_WebAudio_BaseAudioContext = $PS["Audio.WebAudio.BaseAudioContext"];
  var Audio_WebAudio_GainNode = $PS["Audio.WebAudio.GainNode"];
  var Audio_WebAudio_Oscillator = $PS["Audio.WebAudio.Oscillator"];
  var Audio_WebAudio_Types = $PS["Audio.WebAudio.Types"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Timer = $PS["Effect.Timer"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var beep = function (ctx) {
      return function (osc) {
          return function (g) {
              return function __do() {
                  var v = Audio_WebAudio_Oscillator.frequency(osc)();
                  var v1 = Audio_WebAudio_AudioParam.getValue(v)();
                  Audio_WebAudio_AudioParam.setValue((function () {
                      var $21 = v1 === 55.0;
                      if ($21) {
                          return 53.0;
                      };
                      return 55.0;
                  })())(v)();
                  var v2 = Audio_WebAudio_BaseAudioContext.currentTime(ctx)();
                  var v3 = Audio_WebAudio_GainNode.gain(g)();
                  var v4 = Audio_WebAudio_AudioParam.setValueAtTime(0.5)(v2)(v3)();
                  var v5 = Audio_WebAudio_AudioParam.setValueAtTime(1.0e-3)(v2 + 0.2)(v3)();
                  return Data_Unit.unit;
              };
          };
      };
  };
  var controls = function (ref) {
      return function (ctx) {
          return function (osc) {
              return function (g) {
                  return function __do() {
                      var v = Audio_WebAudio_BaseAudioContext.state(ctx)();
                      var $25 = Data_Eq.eq(Audio_WebAudio_Types.eqAudioContextState)(v)(Audio_WebAudio_Types.SUSPENDED.value);
                      if ($25) {
                          Audio_WebAudio_BaseAudioContext.resume(ctx)();
                          var v1 = Effect_Timer.setInterval(1000)(beep(ctx)(osc)(g))();
                          return Effect_Ref.write(v1)(ref)();
                      };
                      Audio_WebAudio_BaseAudioContext.suspend(ctx)();
                      var v1 = Effect_Ref.read(ref)();
                      return Effect_Timer.clearInterval(v1)();
                  };
              };
          };
      };
  };
  var main = function __do() {
      var v = Audio_WebAudio_BaseAudioContext.newAudioContext();
      var v1 = Audio_WebAudio_BaseAudioContext.createOscillator(v)();
      Audio_WebAudio_Oscillator.setOscillatorType(Audio_WebAudio_Oscillator.Square.value)(v1)();
      Audio_WebAudio_Oscillator.startOscillator(0.0)(v1)();
      var v2 = Audio_WebAudio_BaseAudioContext.createGain(v)();
      Control_Bind.bindFlipped(Effect.bindEffect)(Audio_WebAudio_AudioParam.setValue(0.0))(Audio_WebAudio_GainNode.gain(v2))();
      Audio_WebAudio_Types.connect(Audio_WebAudio_Types.connectableGainNode)()(v1)(v2)();
      Control_Bind.bindFlipped(Effect.bindEffect)(Audio_WebAudio_Types.connect(Audio_WebAudio_Types.connectableDestinationNode)()(v2))(Audio_WebAudio_BaseAudioContext.destination(v))();
      Audio_WebAudio_BaseAudioContext.suspend(v)();
      var id = Effect_Ref["new"](0);
      var v3 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toParentNode)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document))();
      var v4 = Web_DOM_ParentNode.querySelector(Data_Newtype.wrap(Web_DOM_ParentNode.newtypeQuerySelector)("#play"))(v3)();
      (function () {
          if (v4 instanceof Data_Maybe.Just) {
              var v5 = Web_Event_EventTarget.eventListener(function (v5) {
                  return controls(id)(v)(v1)(v2);
              })();
              return Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("click"))(v5)(false)(v4.value0)();
          };
          if (v4 instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"]("No 'play' button")();
          };
          throw new Error("Failed pattern match at Main (line 78, column 3 - line 82, column 40): " + [ v4.constructor.name ]);
      })();
      var v5 = Web_DOM_ParentNode.querySelector(Data_Newtype.wrap(Web_DOM_ParentNode.newtypeQuerySelector)("#stop"))(v3)();
      (function () {
          if (v5 instanceof Data_Maybe.Just) {
              var v6 = Web_Event_EventTarget.eventListener(function (v6) {
                  return controls(id)(v)(v1)(v2);
              })();
              return Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("click"))(v6)(false)(v5.value0)();
          };
          if (v5 instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"]("No 'stop' button")();
          };
          throw new Error("Failed pattern match at Main (line 84, column 3 - line 88, column 40): " + [ v5.constructor.name ]);
      })();
      return Data_Unit.unit;
  };
  exports["beep"] = beep;
  exports["controls"] = controls;
  exports["main"] = main;
})(PS);
PS["Main"].main();